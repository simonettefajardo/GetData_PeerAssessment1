?write.table
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
mydf
str(mydf)
rm("mydf")
cran
?tbl_df
group_by(cran,pacakge)
group_by(cran,package)
group_by(cran,cran$package)
?group_by
by_package<-group_by(cran,package)
by_package
##You will be required to submit:
##1) a tidy data set as described below,
##2) a link to a Github repository with your script for performing the analysis,
##3) a code book that describes the variables, the data, and any transformations or work
##that you performed to clean up the data called CodeBook.md.
##You should also include a README.md in the repo with your scripts.
##This repo explains how all of the scripts work and how they are connected.
###Details for #1 You should create one R script called run_analysis.R
##that does the following.
###1. Merges the training and the test sets to create one data set.
###2. Extracts only the measurements on the mean and standard deviation for each measurement.
###3. Uses descriptive activity names to name the activities in the data set
###4. Appropriately labels the data set with descriptive variable names.
###5. From the data set in step 4, creates a second, independent tidy data set
###with the average of each variable for each activity and each subject.
##Please upload the tidy data set created in step 5 of the instructions.
##Please upload your data set as a txt file
##created with write.table() using row.name=FALSE
##(do not cut and paste a dataset directly into the text box,
##as this may cause errors saving your submission).
##1. Merges the training and the test sets to create one data set.
###1.1Read all files and  store in separate dataframes
####read activity_labels  and features files
activity_labels<-read.csv('UCI HAR Dataset/activity_labels.txt',sep=" ",header=FALSE)
features<-read.csv('UCI HAR Dataset/features.txt',sep=" ",header=FALSE)
####train folder:
X_train<-read.csv('UCI HAR Dataset/train/X_train.txt',sep = "",header = FALSE)
y_train<-read.csv('UCI HAR Dataset/train/y_train.txt',sep = "",header = FALSE)
subject_train<-read.csv('UCI HAR Dataset/train/subject_train.txt',sep = "",header = FALSE)
body_acc_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt',sep = "",header = FALSE)
body_acc_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt',sep = "",header = FALSE)
body_acc_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt',sep = "",header = FALSE)
body_gyro_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt',sep = "",header = FALSE)
body_gyro_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt',sep = "",header = FALSE)
body_gyro_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt',sep = "",header = FALSE)
total_acc_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt',sep = "",header = FALSE)
total_acc_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt',sep = "",header = FALSE)
total_acc_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt',sep = "",header = FALSE)
####test folder:
X_test<-read.csv('UCI HAR Dataset/test/X_test.txt',sep = "",header = FALSE)
y_test<-read.csv('UCI HAR Dataset/test/y_test.txt',sep = "",header = FALSE)
subject_test<-read.csv('UCI HAR Dataset/test/subject_test.txt',sep = "",header = FALSE)
body_acc_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt',sep = "",header = FALSE)
body_acc_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt',sep = "",header = FALSE)
body_acc_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt',sep = "",header = FALSE)
body_gyro_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt',sep = "",header = FALSE)
body_gyro_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt',sep = "",header = FALSE)
body_gyro_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt',sep = "",header = FALSE)
total_acc_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt',sep = "",header = FALSE)
total_acc_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt',sep = "",header = FALSE)
total_acc_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt',sep = "",header = FALSE)
###1.2 Append each test data to corresponding train data
X_train_test_append<-rbind(X_train,X_test)
y_train_test_append<-rbind(y_train,y_test)
colnames(subject_test)<-colnames(subject_train)
subject_train_test_append<-rbind(subject_train,subject_test)
body_acc_x_train_test_append<-rbind(body_acc_x_train,body_acc_x_test)
body_acc_y_train_test_append<-rbind(body_acc_y_train,body_acc_y_test)
body_acc_z_train_test_append<-rbind(body_acc_z_train,body_acc_z_test)
body_gyro_x_train_test_append<-rbind(body_gyro_x_train,body_gyro_x_test)
body_gyro_y_train_test_append<-rbind(body_gyro_y_train,body_gyro_y_test)
body_gyro_z_train_test_append<-rbind(body_gyro_z_train,body_gyro_z_test)
total_acc_x_train_test_append<-rbind(total_acc_x_train,total_acc_x_test)
total_acc_y_train_test_append<-rbind(total_acc_y_train,total_acc_y_test)
total_acc_z_train_test_append<-rbind(total_acc_z_train,total_acc_z_test)
###1.3 Label columns of dataframes obtained in step 1.2
colnames(X_train_test_append)<-features$V2
colnames(subject_train_test_append)<-c("subject_id")
colnames(y_train_test_append)<-c("activity_id")
colnames(activity_labels)<-c("activity_id","activity")
colnames(body_acc_x_train_test_append)<-gsub("V","body_acc_x_train_test",names(body_acc_x_train_test_append))
colnames(body_acc_y_train_test_append)<-gsub("V","body_acc_y_train_test",names(body_acc_y_train_test_append))
colnames(body_acc_z_train_test_append)<-gsub("V","body_acc_z_train_test",names(body_acc_z_train_test_append))
colnames(body_gyro_x_train_test_append)<-gsub("V","body_gyro_x_train_test",names(body_gyro_x_train_test_append))
colnames(body_gyro_y_train_test_append)<-gsub("V","body_gyro_y_train_test",names(body_gyro_y_train_test_append))
colnames(body_gyro_z_train_test_append)<-gsub("V","body_gyro_z_train_test",names(body_gyro_z_train_test_append))
colnames(total_acc_x_train_test_append)<-gsub("V","total_acc_x_train_test",names(total_acc_x_train_test_append))
colnames(total_acc_y_train_test_append)<-gsub("V","total_acc_y_train_test",names(total_acc_y_train_test_append))
colnames(total_acc_z_train_test_append)<-gsub("V","total_acc_z_train_test",names(total_acc_z_train_test_append))
###1.4 Merge dataframes into one dataset
##merge test data with subject data
X_subject<-cbind(subject_train_test_append,X_train_test_append)
##merge Inertial signals dataframes
inertial_signals<-cbind(body_acc_x_train_test_append,
body_acc_y_train_test_append,
body_acc_z_train_test_append,
body_gyro_x_train_test_append,
body_gyro_y_train_test_append,
body_gyro_z_train_test_append,
total_acc_x_train_test_append,
total_acc_y_train_test_append,
total_acc_z_train_test_append)
All_data_merged<-cbind(X_subject,y_train_test_append,inertial_signals)
###2. Extracts only the measurements on the mean and standard deviation for each measurement.
All_data_mean_std<-All_data_merged[,c(1:7,42:46,81:86,122:127,162:166,202:203,215:216,228:229,241:242,254:255,267:272,346:351,425:430,504:505,517:518,530:531,543:544)]
###3. Uses descriptive activity names to name the activities in the data set
All_data_merged_labelled<-merge(activity_labels,All_data_merged,by=c("activity_id"))
###4. Appropriately labels the data set with descriptive variable names.
##done in step 1.3 Label columns of dataframes obtained .....
All_data_merged_labelled
###5. From the data set in step 4, creates a second, independent tidy data set
###with the average of each variable for each activity and each subject.
##load dplyr library
library(dplyr)
##Group Data by Activity
ByActivityData<-group_by(All_data_merged_labelled,activity)
ByActivitySubjectData<-group_by(ByActivityData,subject_id)
##MeanPerActivitySubject<-All_data_merged_labelled
##write.table()
play()
##You will be required to submit:
##1) a tidy data set as described below,
##2) a link to a Github repository with your script for performing the analysis,
##3) a code book that describes the variables, the data, and any transformations or work
##that you performed to clean up the data called CodeBook.md.
##You should also include a README.md in the repo with your scripts.
##This repo explains how all of the scripts work and how they are connected.
###Details for #1 You should create one R script called run_analysis.R
##that does the following.
###1. Merges the training and the test sets to create one data set.
###2. Extracts only the measurements on the mean and standard deviation for each measurement.
###3. Uses descriptive activity names to name the activities in the data set
###4. Appropriately labels the data set with descriptive variable names.
###5. From the data set in step 4, creates a second, independent tidy data set
###with the average of each variable for each activity and each subject.
##Please upload the tidy data set created in step 5 of the instructions.
##Please upload your data set as a txt file
##created with write.table() using row.name=FALSE
##(do not cut and paste a dataset directly into the text box,
##as this may cause errors saving your submission).
##1. Merges the training and the test sets to create one data set.
###1.1Read all files and  store in separate dataframes
####read activity_labels  and features files
activity_labels<-read.csv('UCI HAR Dataset/activity_labels.txt',sep=" ",header=FALSE)
features<-read.csv('UCI HAR Dataset/features.txt',sep=" ",header=FALSE)
####train folder:
X_train<-read.csv('UCI HAR Dataset/train/X_train.txt',sep = "",header = FALSE)
y_train<-read.csv('UCI HAR Dataset/train/y_train.txt',sep = "",header = FALSE)
subject_train<-read.csv('UCI HAR Dataset/train/subject_train.txt',sep = "",header = FALSE)
body_acc_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt',sep = "",header = FALSE)
body_acc_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt',sep = "",header = FALSE)
body_acc_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt',sep = "",header = FALSE)
body_gyro_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt',sep = "",header = FALSE)
body_gyro_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt',sep = "",header = FALSE)
body_gyro_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt',sep = "",header = FALSE)
total_acc_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt',sep = "",header = FALSE)
total_acc_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt',sep = "",header = FALSE)
total_acc_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt',sep = "",header = FALSE)
####test folder:
X_test<-read.csv('UCI HAR Dataset/test/X_test.txt',sep = "",header = FALSE)
y_test<-read.csv('UCI HAR Dataset/test/y_test.txt',sep = "",header = FALSE)
subject_test<-read.csv('UCI HAR Dataset/test/subject_test.txt',sep = "",header = FALSE)
body_acc_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt',sep = "",header = FALSE)
body_acc_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt',sep = "",header = FALSE)
body_acc_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt',sep = "",header = FALSE)
body_gyro_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt',sep = "",header = FALSE)
body_gyro_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt',sep = "",header = FALSE)
body_gyro_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt',sep = "",header = FALSE)
total_acc_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt',sep = "",header = FALSE)
total_acc_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt',sep = "",header = FALSE)
total_acc_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt',sep = "",header = FALSE)
###1.2 Append each test data to corresponding train data
X_train_test_append<-rbind(X_train,X_test)
y_train_test_append<-rbind(y_train,y_test)
colnames(subject_test)<-colnames(subject_train)
subject_train_test_append<-rbind(subject_train,subject_test)
body_acc_x_train_test_append<-rbind(body_acc_x_train,body_acc_x_test)
body_acc_y_train_test_append<-rbind(body_acc_y_train,body_acc_y_test)
body_acc_z_train_test_append<-rbind(body_acc_z_train,body_acc_z_test)
body_gyro_x_train_test_append<-rbind(body_gyro_x_train,body_gyro_x_test)
body_gyro_y_train_test_append<-rbind(body_gyro_y_train,body_gyro_y_test)
body_gyro_z_train_test_append<-rbind(body_gyro_z_train,body_gyro_z_test)
total_acc_x_train_test_append<-rbind(total_acc_x_train,total_acc_x_test)
total_acc_y_train_test_append<-rbind(total_acc_y_train,total_acc_y_test)
total_acc_z_train_test_append<-rbind(total_acc_z_train,total_acc_z_test)
###1.3 Label columns of dataframes obtained in step 1.2
colnames(X_train_test_append)<-features$V2
colnames(subject_train_test_append)<-c("subject_id")
colnames(y_train_test_append)<-c("activity_id")
colnames(activity_labels)<-c("activity_id","activity")
colnames(body_acc_x_train_test_append)<-gsub("V","body_acc_x_train_test",names(body_acc_x_train_test_append))
colnames(body_acc_y_train_test_append)<-gsub("V","body_acc_y_train_test",names(body_acc_y_train_test_append))
colnames(body_acc_z_train_test_append)<-gsub("V","body_acc_z_train_test",names(body_acc_z_train_test_append))
colnames(body_gyro_x_train_test_append)<-gsub("V","body_gyro_x_train_test",names(body_gyro_x_train_test_append))
colnames(body_gyro_y_train_test_append)<-gsub("V","body_gyro_y_train_test",names(body_gyro_y_train_test_append))
colnames(body_gyro_z_train_test_append)<-gsub("V","body_gyro_z_train_test",names(body_gyro_z_train_test_append))
colnames(total_acc_x_train_test_append)<-gsub("V","total_acc_x_train_test",names(total_acc_x_train_test_append))
colnames(total_acc_y_train_test_append)<-gsub("V","total_acc_y_train_test",names(total_acc_y_train_test_append))
colnames(total_acc_z_train_test_append)<-gsub("V","total_acc_z_train_test",names(total_acc_z_train_test_append))
###1.4 Merge dataframes into one dataset
##merge test data with subject data
X_subject<-cbind(subject_train_test_append,X_train_test_append)
##merge Inertial signals dataframes
inertial_signals<-cbind(body_acc_x_train_test_append,
body_acc_y_train_test_append,
body_acc_z_train_test_append,
body_gyro_x_train_test_append,
body_gyro_y_train_test_append,
body_gyro_z_train_test_append,
total_acc_x_train_test_append,
total_acc_y_train_test_append,
total_acc_z_train_test_append)
All_data_merged<-cbind(X_subject,y_train_test_append,inertial_signals)
###2. Extracts only the measurements on the mean and standard deviation for each measurement.
All_data_mean_std<-All_data_merged[,c(1:7,42:46,81:86,122:127,162:166,202:203,215:216,228:229,241:242,254:255,267:272,346:351,425:430,504:505,517:518,530:531,543:544)]
###3. Uses descriptive activity names to name the activities in the data set
All_data_merged_labelled<-merge(activity_labels,All_data_merged,by=c("activity_id"))
###4. Appropriately labels the data set with descriptive variable names.
##done in step 1.3 Label columns of dataframes obtained .....
##All_data_merged_labelled
###5. From the data set in step 4, creates a second, independent tidy data set
###with the average of each variable for each activity and each subject.
##load dplyr library
library(dplyr)
##Group Data by Activity
ByActivityData<-group_by(All_data_merged_labelled,activity)
ByActivitySubjectData<-group_by(ByActivityData,subject_id)
##MeanPerActivitySubject<-All_data_merged_labelled
##write.table()
names(All_data_merged_labelled)
getwd()
setwd("/Users/uplb/Desktop/coursera/GetData_PeerAssessment1")
##You will be required to submit:
##1) a tidy data set as described below,
##2) a link to a Github repository with your script for performing the analysis,
##3) a code book that describes the variables, the data, and any transformations or work
##that you performed to clean up the data called CodeBook.md.
##You should also include a README.md in the repo with your scripts.
##This repo explains how all of the scripts work and how they are connected.
###Details for #1 You should create one R script called run_analysis.R
##that does the following.
###1. Merges the training and the test sets to create one data set.
###2. Extracts only the measurements on the mean and standard deviation for each measurement.
###3. Uses descriptive activity names to name the activities in the data set
###4. Appropriately labels the data set with descriptive variable names.
###5. From the data set in step 4, creates a second, independent tidy data set
###with the average of each variable for each activity and each subject.
##Please upload the tidy data set created in step 5 of the instructions.
##Please upload your data set as a txt file
##created with write.table() using row.name=FALSE
##(do not cut and paste a dataset directly into the text box,
##as this may cause errors saving your submission).
##1. Merges the training and the test sets to create one data set.
###1.1Read all files and  store in separate dataframes
####read activity_labels  and features files
activity_labels<-read.csv('UCI HAR Dataset/activity_labels.txt',sep=" ",header=FALSE)
features<-read.csv('UCI HAR Dataset/features.txt',sep=" ",header=FALSE)
####train folder:
X_train<-read.csv('UCI HAR Dataset/train/X_train.txt',sep = "",header = FALSE)
y_train<-read.csv('UCI HAR Dataset/train/y_train.txt',sep = "",header = FALSE)
subject_train<-read.csv('UCI HAR Dataset/train/subject_train.txt',sep = "",header = FALSE)
body_acc_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt',sep = "",header = FALSE)
body_acc_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt',sep = "",header = FALSE)
body_acc_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt',sep = "",header = FALSE)
body_gyro_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt',sep = "",header = FALSE)
body_gyro_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt',sep = "",header = FALSE)
body_gyro_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt',sep = "",header = FALSE)
total_acc_x_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt',sep = "",header = FALSE)
total_acc_y_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt',sep = "",header = FALSE)
total_acc_z_train<-read.csv('UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt',sep = "",header = FALSE)
####test folder:
X_test<-read.csv('UCI HAR Dataset/test/X_test.txt',sep = "",header = FALSE)
y_test<-read.csv('UCI HAR Dataset/test/y_test.txt',sep = "",header = FALSE)
subject_test<-read.csv('UCI HAR Dataset/test/subject_test.txt',sep = "",header = FALSE)
body_acc_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt',sep = "",header = FALSE)
body_acc_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt',sep = "",header = FALSE)
body_acc_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt',sep = "",header = FALSE)
body_gyro_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt',sep = "",header = FALSE)
body_gyro_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt',sep = "",header = FALSE)
body_gyro_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt',sep = "",header = FALSE)
total_acc_x_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt',sep = "",header = FALSE)
total_acc_y_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt',sep = "",header = FALSE)
total_acc_z_test<-read.csv('UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt',sep = "",header = FALSE)
###1.2 Append each test data to corresponding train data
X_train_test_append<-rbind(X_train,X_test)
y_train_test_append<-rbind(y_train,y_test)
colnames(subject_test)<-colnames(subject_train)
subject_train_test_append<-rbind(subject_train,subject_test)
body_acc_x_train_test_append<-rbind(body_acc_x_train,body_acc_x_test)
body_acc_y_train_test_append<-rbind(body_acc_y_train,body_acc_y_test)
body_acc_z_train_test_append<-rbind(body_acc_z_train,body_acc_z_test)
body_gyro_x_train_test_append<-rbind(body_gyro_x_train,body_gyro_x_test)
body_gyro_y_train_test_append<-rbind(body_gyro_y_train,body_gyro_y_test)
body_gyro_z_train_test_append<-rbind(body_gyro_z_train,body_gyro_z_test)
total_acc_x_train_test_append<-rbind(total_acc_x_train,total_acc_x_test)
total_acc_y_train_test_append<-rbind(total_acc_y_train,total_acc_y_test)
total_acc_z_train_test_append<-rbind(total_acc_z_train,total_acc_z_test)
###1.3 Label columns of dataframes obtained in step 1.2
colnames(X_train_test_append)<-features$V2
colnames(subject_train_test_append)<-c("subject_id")
colnames(y_train_test_append)<-c("activity_id")
colnames(activity_labels)<-c("activity_id","activity")
colnames(body_acc_x_train_test_append)<-gsub("V","body_acc_x_train_test",names(body_acc_x_train_test_append))
colnames(body_acc_y_train_test_append)<-gsub("V","body_acc_y_train_test",names(body_acc_y_train_test_append))
colnames(body_acc_z_train_test_append)<-gsub("V","body_acc_z_train_test",names(body_acc_z_train_test_append))
colnames(body_gyro_x_train_test_append)<-gsub("V","body_gyro_x_train_test",names(body_gyro_x_train_test_append))
colnames(body_gyro_y_train_test_append)<-gsub("V","body_gyro_y_train_test",names(body_gyro_y_train_test_append))
colnames(body_gyro_z_train_test_append)<-gsub("V","body_gyro_z_train_test",names(body_gyro_z_train_test_append))
colnames(total_acc_x_train_test_append)<-gsub("V","total_acc_x_train_test",names(total_acc_x_train_test_append))
colnames(total_acc_y_train_test_append)<-gsub("V","total_acc_y_train_test",names(total_acc_y_train_test_append))
colnames(total_acc_z_train_test_append)<-gsub("V","total_acc_z_train_test",names(total_acc_z_train_test_append))
###1.4 Merge dataframes into one dataset
##merge test data with subject data
X_subject<-cbind(subject_train_test_append,X_train_test_append)
##merge Inertial signals dataframes
inertial_signals<-cbind(body_acc_x_train_test_append,
body_acc_y_train_test_append,
body_acc_z_train_test_append,
body_gyro_x_train_test_append,
body_gyro_y_train_test_append,
body_gyro_z_train_test_append,
total_acc_x_train_test_append,
total_acc_y_train_test_append,
total_acc_z_train_test_append)
All_data_merged<-cbind(X_subject,y_train_test_append,inertial_signals)
###2. Extracts only the measurements on the mean and standard deviation for each measurement.
All_data_mean_std<-All_data_merged[,c(1:7,42:46,81:86,122:127,162:166,202:203,215:216,228:229,241:242,254:255,267:272,346:351,425:430,504:505,517:518,530:531,543:544)]
###3. Uses descriptive activity names to name the activities in the data set
All_data_merged_labelled<-merge(activity_labels,All_data_merged,by=c("activity_id"))
###4. Appropriately labels the data set with descriptive variable names.
##done in step 1.3 Label columns of dataframes obtained .....
##All_data_merged_labelled
###5. From the data set in step 4, creates a second, independent tidy data set
###with the average of each variable for each activity and each subject.
##load dplyr library
library(dplyr)
##Group Data by Activity
##ByActivityData<-group_by(All_data_merged_labelled,activity)
##ByActivitySubjectData<-group_by(ByActivityData,subject_id)
##MeanPerActivitySubject<-All_data_merged_labelled
##write.table()
ByActivityData<-group_by(All_data_merged_labelled,activity)
ByActivitySubjectData<-group_by(ByActivityData,subject_id)
ByActivitySubjectData
ByActivityData
str(ByActivitySubjectData)
?summarize
nxt()
summarize(by_package,mean(size))
play()
summarize(ByActivitySubjectData,colMeans(ByActivitySubjectData))
names(ByActivitySubjectData)
summarize(ByActivitySubjectData,colMeans(4:1715))
?colMeans
summarize(ByActivitySubjectData,mean(4:1715))
summarize(ByActivitySubjectData,mean(`tBodyAcc-mean()-X`: ByActivitySubjectData$))
summarize(ByActivitySubjectData,mean(tBodyAcc-mean()-X:total_acc_z_train_test128))
summarize(ByActivitySubjectData,mean(ByActivitySubjectData$tBodyAcc-mean()-X:ByActivitySubjectData$total_acc_z_train_test128))
?aggregate
summary(ByActivitySubjectData,mean)
summary(ByActivitySubjectData)
?summary
?summarize
?colMeans
nxt()
submit()
pack_sum
skip()
skip()
skip()
skip()
bye()
names(ByActivitySubjectData)
?aggregate
?summarise_each
iris
by_species <- iris %>% group_by(Species)
by_species
by_species %>% summarise_each(funs(length))
by_species %>% summarise_each(funs(mean)
by_species %>% summarise_each(funs(mean))
by_species %>% summarise_each(funs(mean),Petal.Width)
by_species %>% summarise_each(funs(mean),-Petal.Width)
summarise_each(ByActivitySubjectData,funs(mean))
?matches
mtcars
testdata1$V1<-1:10
testdata<-data.frame()
testdata1$V1<-1:10
testdata$V1<-1:10
testdata
airquality
iris3
iris
table(iris$Petal.Width)
table(iris$Petal.Length)
dim(iris)
LETTERS
testdata<-cbind(iris,LETTERS)
testdata
testcol<-A:C
testcol<-c(A:C)
testcol<-c("A","B","C")
testcol1<-c(testcol,rep=50)
dim(testcol1)
testcol1
testcol<-LETTERs
testcol<-LETTERS
testcol1<-c(testcol,testcol,testcol,testcol,testcol,testcol)
dim(testcol1)
testcol1
testcol<-1:10
testcol1<-c(testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol,testcol)
table(testcol1)
testdata<-cbind(iris,testcol1)
head(testdata)
tail(testdata)
table(testdata$Species,testdata$testcol1)
bytestcol1<-group_by(testdata,testcol1)
bytestcol1
testdata
byspeciescol<-group_by(testdata,c(testcol1,Species))
byspeciescol<-group_by(testdata,Species))
byspeciescol<-group_by(testdata,Species)
byspeciescol
?group_by_
by_vs_am<-group_by(testdata,Species,testcol1)
by_vs_am
by_vs_am<-group_by(mtcars,vs,am)
by_vs_am
by_activity_subject<-group_by(All_data_merged_labelled,activity,subject_id)
by_activity_subject
?summarise_each
by_species %>% summarise_each(funs(mean), matches("Width"))
by_species %>% summarise_each(funs(mean), Petal.Width)
by_species %>% summarise_each(funs(mean))
by_species %>% summarise_each(funs(mean), -Petal.Width)
Ave_by_activity_subject<-summarise_each(by_activity_subject,funs(mean))
Ave_by_activity_subject
dim(Ave_by_activity_subject)
names(Ave_by_activity_subject)
Ave_by_activity_subject[3,4]
Ave_by_activity_subject[1:3,1:4]
?write.table
write.table(Ave_by_activity_subject,file="Ave_by_activity_subject.txt",row.name=FALSE)
write.table(Ave_by_activity_subject,file="Ave_by_activity_subject.txt",row.names = FALSE)
write.table(Ave_by_activity_subject,file="Ave_by_activity_subject.txt",row.names = FALSE)
